"""add hvac service

Revision ID: 33f4be5fd593
Revises: 6ecf271d200d
Create Date: 2024-07-08 14:20:34.303877

"""
from alembic import op
from alembic_postgresql_enum import TableReference
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '33f4be5fd593'
down_revision = '6ecf271d200d'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('hvac_equipment_types',
    sa.Column('hvac_equipment_type_id', sa.Uuid(), nullable=False),
    sa.Column('make', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('subtype', sa.String(), nullable=True),
    sa.Column('year_manufactured', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('hvac_equipment_type_id'),
    sa.UniqueConstraint('make', 'model', 'type', 'subtype', 'year_manufactured', name='_hvac_equipment_type_unique_table_constraint')
    )
    op.create_table('hvac_zone_equipment',
    sa.Column('hvac_zone_equipment_id', sa.Uuid(), nullable=False),
    sa.Column('hvac_zone_id', sa.Uuid(), nullable=False),
    sa.Column('hvac_equipment_type_id', sa.Uuid(), nullable=False),
    sa.Column('circuit_id', sa.Uuid(), nullable=False),
    sa.Column('serial', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('hvac_zone_equipment_id'),
    sa.UniqueConstraint('hvac_zone_id', 'hvac_equipment_type_id', name='_hvac_zone_equipment_unique_table_constraint')
    )
    op.create_table('hvac_zone_temperature_sensors',
    sa.Column('hvac_zone_temperature_sensor_id', sa.Uuid(), nullable=False),
    sa.Column('hvac_zone_id', sa.Uuid(), nullable=False),
    sa.Column('temperature_sensor_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('hvac_zone_temperature_sensor_id', 'hvac_zone_id'),
    sa.UniqueConstraint('hvac_zone_id', 'temperature_sensor_id', name='_hvac_zone_temperature_sensor_unique_table_constraint')
    )
    op.create_table('hvac_zones',
    sa.Column('hvac_zone_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('hvac_zone_id'),
    sa.UniqueConstraint('name', 'location_id', name='_hvac_zone_unique_table_constraint')
    )
    op.create_table('thermostats',
    sa.Column('thermostat_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('duid', sa.String(), nullable=False),
    sa.Column('model', sa.Enum('v1', name='thermostatmodelenum'), nullable=False),
    sa.Column('node_id', sa.Uuid(), nullable=False),
    sa.Column('hvac_zone_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('thermostat_id'),
    sa.UniqueConstraint('name', 'duid', 'model', 'node_id', 'hvac_zone_id', name='_thermostat_unique_table_constraint')
    )
    op.sync_enum_values('public', 'accessscope', ['admin:admin', 'appliances:write', 'appliances:read', 'electricity_monitoring:write', 'electricity_monitoring:read', 'hvac:read', 'hvac:write', 'locations:write', 'locations:read', 'location_operating_hours:write', 'location_operating_hours:read', 'mesh_networks:write', 'mesh_networks:read', 'organizations:write', 'organizations:read', 'organization_users:write', 'organization_users:read', 'temperature_monitoring:write', 'temperature_monitoring:read', 'users:write', 'users:read'],
                        [TableReference(table_schema='public', table_name='user_access_scopes', column_name='access_scope'), TableReference(table_schema='public', table_name='access_role_access_scopes', column_name='access_scope')],
                        enum_values_to_rename=[])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.sync_enum_values('public', 'accessscope', ['admin:admin', 'appliances:write', 'appliances:read', 'electricity_monitoring:write', 'electricity_monitoring:read', 'locations:write', 'locations:read', 'location_operating_hours:write', 'location_operating_hours:read', 'mesh_networks:write', 'mesh_networks:read', 'organizations:write', 'organizations:read', 'organization_users:write', 'organization_users:read', 'temperature_monitoring:write', 'temperature_monitoring:read', 'users:write', 'users:read'],
                        [TableReference(table_schema='public', table_name='user_access_scopes', column_name='access_scope'), TableReference(table_schema='public', table_name='access_role_access_scopes', column_name='access_scope')],
                        enum_values_to_rename=[])
    op.drop_table('thermostats')
    op.drop_table('hvac_zones')
    op.drop_table('hvac_zone_temperature_sensors')
    op.drop_table('hvac_zone_equipment')
    op.drop_table('hvac_equipment_types')
    # ### end Alembic commands ###
