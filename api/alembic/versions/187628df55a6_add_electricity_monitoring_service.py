"""add electricity monitoring service

Revision ID: 187628df55a6
Revises: c93049748138
Create Date: 2024-06-07 16:34:21.433791

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '187628df55a6'
down_revision = 'c93049748138'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('circuits',
    sa.Column('circuit_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('electric_panel_id', sa.Uuid(), nullable=False),
    sa.Column('type', sa.Enum('main', 'neutral', 'branch', name='circuittypeenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('circuit_id'),
    sa.UniqueConstraint('name', 'electric_panel_id', 'type', name='_circuits_unique_table_constraint')
    )
    op.create_table('clamps',
    sa.Column('clamp_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('port_name', sa.String(), nullable=False),
    sa.Column('port_pin', sa.Integer(), nullable=False),
    sa.Column('amperage_rating', sa.Integer(), nullable=False),
    sa.Column('phase', sa.Enum('A', 'B', 'C', 'N', name='clampphaseenum'), nullable=False),
    sa.Column('circuit_id', sa.Uuid(), nullable=False),
    sa.Column('electric_sensor_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('clamp_id'),
    sa.UniqueConstraint('name', 'circuit_id', 'phase', name='_clamps_unique_table_constraint')
    )
    op.create_table('electric_panels',
    sa.Column('electric_panel_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('panel_type', sa.Enum('mdp', 'sub', name='electricpaneltypeenum'), nullable=False),
    sa.Column('location_id', sa.Uuid(), nullable=False),
    sa.Column('breaker_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('electric_panel_id'),
    sa.UniqueConstraint('name', 'location_id', name='_electric_panels_unique_table_constraint')
    )
    op.create_table('electric_sensors',
    sa.Column('electric_sensor_id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('duid', sa.String(), nullable=False),
    sa.Column('port_count', sa.Integer(), nullable=False),
    sa.Column('electric_panel_id', sa.Uuid(), nullable=False),
    sa.Column('gateway_id', sa.Uuid(), nullable=False),
    sa.Column('a_breaker_num', sa.Integer(), nullable=False),
    sa.Column('b_breaker_num', sa.Integer(), nullable=False),
    sa.Column('c_breaker_num', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('electric_sensor_id'),
    sa.UniqueConstraint('name', 'gateway_id', 'electric_panel_id', name='_electric_sensors_unique_table_constraint'),
    sa.UniqueConstraint('duid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('electric_sensors')
    op.drop_table('electric_panels')
    op.drop_table('clamps')
    op.drop_table('circuits')
    # ### end Alembic commands ###
